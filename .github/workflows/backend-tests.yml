name: Continuous Integration / Firebase Test Lab / backend
on:
  schedule:
    - cron: "0 4 * * *" # every day on 04:00 UTC
  workflow_dispatch: # can be triggered manually

env:
  flutter_version: '2.10.1'
  test_file_name: 'be_test'

jobs:
  instrumentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device-name: [ Pixel 5e ]
        device-id: [ redfin ] # PHYSICAL_DEVICE (up to 5 runs/day)
        api-level: [ 30 ]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python SDK
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install firebase_admin

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.DEVEL_GOOGLE_APP_CREDENTIALS }}

      - name: Flutter SDK cache
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          cache: true
          cache-key: ${{ runner.OS }}-flutter-${{ env.flutter_version }}
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Setup env file for custom token
        run: echo "$ENCODED_CONTENT" | base64 -d > serviceAcc.json
        env:
          ENCODED_CONTENT: ${{ secrets.DEVEL_GOOGLE_APP_CREDENTIALS_BASE64 }}

      - name: Generate custom token and put into .env.backend_test
        run: python ./bin/ci_workflow_scripts/custom_token_gen.py

      - name: Copy .env.backend_test into .env file
        run: sh ./bin/ci_workflow_scripts/env_copy_backend.sh

      - name: Update build.gradle file
        run: sh ./bin/ci_workflow_scripts/update_gradle.sh

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build apk
        run: |
          flutter build apk --debug --flavor dev

      - name: Assemble Android test
        working-directory: ./android
        run: |
          ./gradlew app:assembleDevDebugAndroidTest
          ./gradlew app:assembleDevDebug -Ptarget=`pwd`/../integration_test/test_sets/${{ env.test_file_name }}.dart

      - name: Set up Google Cloud SDK for Firebase
        uses: google-github-actions/setup-gcloud@v0

      - name: Firebase Test Lab - Backend Integration Tests
        id: be-test
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app build/app/outputs/apk/dev/debug/app-dev-debug.apk \
            --test build/app/outputs/apk/androidTest/dev/debug/app-dev-debug-androidTest.apk \
            --timeout 10m \
            --results-history-name="[backend] [dev] loonoapp" \
            --device model=${{ matrix.device-id }},version=${{ matrix.api-level }}

      - name: Send Slack notification if tests have failed
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        if: failure() && steps.be-test.outcome != 'success'
        with:
          payload: |
            {
              "text": "❗ Scheduled backend integration tests have failed. ❗\nSee results at: https://1url.cz/mK71t"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DEVEL_SLACK_CODEMAGIC_CHANNEL_WEBHOOK_URL }}
