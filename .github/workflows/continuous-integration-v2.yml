name: Continuous Integration v2
on: [ push, pull_request ]

env:
 flutter_version: '3.3.10'

jobs:
  format:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          cache: true
          cache-key: ${{ runner.OS }}-flutter-${{ env.flutter_version }}
          cache-path: ${{ runner.tool_cache }}/flutter
          
      - uses: bluefireteam/melos-action@v2
      
      - uses: Homebrew/actions/setup-homebrew@master
      
      - name: 'Install Tools'
        run: |
          flutter pub global activate flutter_plugin_tools
          brew install swiftformat
          brew install clang-format
          brew link --overwrite --force clang-format
      
      - name: 'Formatter version'
        run: |
          clang-format --version
          swiftformat --version
      
      - name: 'Dart, Java and Objective-C '
        run: |
          flutter pub global run flutter_plugin_tools format
          ./.github/workflows/scripts/validate-formatting.sh
      
      - name: 'Swift'
        if: ${{ success() || failure() }}
        run: |
          swiftformat .
          ./.github/workflows/scripts/validate-formatting.sh


  analyze:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          cache: true
          cache-key: ${{ runner.OS }}-flutter-${{ env.flutter_version }}
          cache-path: ${{ runner.tool_cache }}/flutter

      - uses: bluefireteam/melos-action@v2

      - name: Install dependencies
        run: flutter pub get

      - name: Copy .env.example into .env file
        run: sh ./bin/ci_workflow_scripts/env_copy.sh

      - name: 'Run Analyze'
        run: melos run analyze 
