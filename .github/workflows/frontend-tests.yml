name: Continuous Integration / Firebase Test Lab / frontend
on:
  push:
    branches: [ master ]
  workflow_dispatch: # can be triggered manually

env:
  flutter_version: '2.10.1'
  test_file_name: 'app_test'

jobs:
  instrumentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device-name: [ Pixel 5e ]
        device-id: [ redfin ] # PHYSICAL_DEVICE (up to 5 runs/day)
        api-level: [ 30 ]

    steps:
      - uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.DEVEL_GOOGLE_APP_CREDENTIALS }}

      - name: Flutter SDK cache
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          cache: true
          cache-key: ${{ runner.OS }}-flutter-${{ env.flutter_version }}
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Install dependencies
        run: flutter pub get

      - name: Copy .env.example into .env file
        run: sh ./bin/ci_workflow_scripts/env_copy.sh

      # otherwise failing with an error: "path may not be null or empty string. path='null'" (https://stackoverflow.com/a/57515614)
      - name: Update build.gradle file
        run: sh ./bin/ci_workflow_scripts/update_gradle.sh

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build apk
        run: |
          flutter build apk --debug --flavor dev

      - name: Assemble Android test
        working-directory: ./android
        run: |
          ./gradlew app:assembleDevDebugAndroidTest
          ./gradlew app:assembleDevDebug -Ptarget=`pwd`/../integration_test/test_sets/${{ env.test_file_name }}.dart

      - name: Set up Google Cloud SDK for Firebase
        uses: google-github-actions/setup-gcloud@v0

      - name: Run tests in Firebase Test Lab
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app build/app/outputs/apk/dev/debug/app-dev-debug.apk \
            --test build/app/outputs/apk/androidTest/dev/debug/app-dev-debug-androidTest.apk \
            --timeout 15m \
            --device model=${{ matrix.device-id }},version=${{ matrix.api-level }}
